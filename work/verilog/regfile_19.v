/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module regfile_19 (
    input clk,
    input rst,
    input [3:0] ra,
    input [3:0] rb,
    input [3:0] rc,
    input we,
    input [15:0] data,
    output reg [15:0] out_a,
    output reg [15:0] out_b,
    output reg [15:0] column_1,
    output reg [15:0] column_2,
    output reg [15:0] column_3,
    output reg [15:0] column_4,
    output reg [15:0] column_lunatic
  );
  
  
  
  reg [15:0] M_col0_d, M_col0_q = 1'h0;
  reg [15:0] M_col1_d, M_col1_q = 1'h0;
  reg [15:0] M_col2_d, M_col2_q = 1'h0;
  reg [15:0] M_col3_d, M_col3_q = 1'h0;
  reg [15:0] M_blank_d, M_blank_q = 1'h0;
  reg [15:0] M_combo_d, M_combo_q = 1'h0;
  reg [15:0] M_score_d, M_score_q = 1'h0;
  reg [15:0] M_counter_d, M_counter_q = 1'h0;
  reg [15:0] M_total_notes_d, M_total_notes_q = 1'h0;
  reg [15:0] M_most_sigbits_d, M_most_sigbits_q = 1'h0;
  reg [15:0] M_selected_col_d, M_selected_col_q = 1'h0;
  reg [15:0] M_selected_col_address_d, M_selected_col_address_q = 1'h0;
  reg [15:0] M_add_score_d, M_add_score_q = 1'h0;
  reg [31:0] M_reg_temp_d, M_reg_temp_q = 1'h0;
  reg [15:0] M_col_lunatic_d, M_col_lunatic_q = 1'h0;
  
  always @* begin
    M_blank_d = M_blank_q;
    M_add_score_d = M_add_score_q;
    M_col_lunatic_d = M_col_lunatic_q;
    M_combo_d = M_combo_q;
    M_selected_col_address_d = M_selected_col_address_q;
    M_counter_d = M_counter_q;
    M_total_notes_d = M_total_notes_q;
    M_selected_col_d = M_selected_col_q;
    M_reg_temp_d = M_reg_temp_q;
    M_score_d = M_score_q;
    M_most_sigbits_d = M_most_sigbits_q;
    M_col2_d = M_col2_q;
    M_col3_d = M_col3_q;
    M_col0_d = M_col0_q;
    M_col1_d = M_col1_q;
    
    if (we) begin
      
      case (rc)
        4'h0: begin
          M_col0_d = data;
        end
        4'h1: begin
          M_col1_d = data;
        end
        4'h2: begin
          M_col2_d = data;
        end
        4'h3: begin
          M_col3_d = data;
        end
        4'h4: begin
          M_blank_d = data;
        end
        4'h5: begin
          M_combo_d = data;
        end
        4'h6: begin
          M_score_d = data;
        end
        4'h7: begin
          M_counter_d = data;
        end
        4'h8: begin
          M_total_notes_d = data;
        end
        4'h9: begin
          M_most_sigbits_d = data;
        end
        4'ha: begin
          M_selected_col_d = data;
        end
        4'hb: begin
          M_selected_col_address_d = data;
        end
        4'hc: begin
          M_add_score_d = data;
        end
        4'hd: begin
          M_reg_temp_d[0+15-:16] = data;
        end
        4'he: begin
          M_reg_temp_d[16+15-:16] = data;
        end
        4'hf: begin
          M_col_lunatic_d = data;
        end
      endcase
    end
    
    case (ra)
      4'h0: begin
        out_a = M_col0_q;
      end
      4'h1: begin
        out_a = M_col1_q;
      end
      4'h2: begin
        out_a = M_col2_q;
      end
      4'h3: begin
        out_a = M_col3_q;
      end
      4'h4: begin
        out_a = M_blank_q;
      end
      4'h5: begin
        out_a = M_combo_q;
      end
      4'h6: begin
        out_a = M_score_q;
      end
      4'h7: begin
        out_a = M_counter_q;
      end
      4'h8: begin
        out_a = M_total_notes_q;
      end
      4'h9: begin
        out_a = M_most_sigbits_q;
      end
      4'ha: begin
        out_a = M_selected_col_q;
      end
      4'hb: begin
        out_a = M_selected_col_address_q;
      end
      4'hc: begin
        out_a = M_add_score_q;
      end
      4'hd: begin
        out_a = M_reg_temp_q[0+15-:16];
      end
      4'he: begin
        out_a = M_reg_temp_q[16+15-:16];
      end
      4'hf: begin
        out_a = M_col_lunatic_q;
      end
      default: begin
        out_a = 1'h0;
      end
    endcase
    
    case (rb)
      4'h0: begin
        out_b = M_col0_q;
      end
      4'h1: begin
        out_b = M_col1_q;
      end
      4'h2: begin
        out_b = M_col2_q;
      end
      4'h3: begin
        out_b = M_col3_q;
      end
      4'h4: begin
        out_b = M_blank_q;
      end
      4'h5: begin
        out_b = M_combo_q;
      end
      4'h6: begin
        out_b = M_score_q;
      end
      4'h7: begin
        out_b = M_counter_q;
      end
      4'h8: begin
        out_b = M_total_notes_q;
      end
      4'h9: begin
        out_b = M_most_sigbits_q;
      end
      4'ha: begin
        out_b = M_selected_col_q;
      end
      4'hb: begin
        out_b = M_selected_col_address_q;
      end
      4'hc: begin
        out_b = M_add_score_q;
      end
      4'hd: begin
        out_b = M_reg_temp_q[0+15-:16];
      end
      4'he: begin
        out_b = M_reg_temp_q[16+15-:16];
      end
      4'hf: begin
        out_b = M_col_lunatic_q;
      end
      default: begin
        out_b = 1'h0;
      end
    endcase
    column_1 = M_col0_q;
    column_2 = M_col1_q;
    column_3 = M_col2_q;
    column_4 = M_col3_q;
    column_lunatic = M_col_lunatic_q;
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_col0_q <= 1'h0;
      M_col1_q <= 1'h0;
      M_col2_q <= 1'h0;
      M_col3_q <= 1'h0;
      M_blank_q <= 1'h0;
      M_combo_q <= 1'h0;
      M_score_q <= 1'h0;
      M_counter_q <= 1'h0;
      M_total_notes_q <= 1'h0;
      M_most_sigbits_q <= 1'h0;
      M_selected_col_q <= 1'h0;
      M_selected_col_address_q <= 1'h0;
      M_add_score_q <= 1'h0;
      M_reg_temp_q <= 1'h0;
      M_col_lunatic_q <= 1'h0;
    end else begin
      M_col0_q <= M_col0_d;
      M_col1_q <= M_col1_d;
      M_col2_q <= M_col2_d;
      M_col3_q <= M_col3_d;
      M_blank_q <= M_blank_d;
      M_combo_q <= M_combo_d;
      M_score_q <= M_score_d;
      M_counter_q <= M_counter_d;
      M_total_notes_q <= M_total_notes_d;
      M_most_sigbits_q <= M_most_sigbits_d;
      M_selected_col_q <= M_selected_col_d;
      M_selected_col_address_q <= M_selected_col_address_d;
      M_add_score_q <= M_add_score_d;
      M_reg_temp_q <= M_reg_temp_d;
      M_col_lunatic_q <= M_col_lunatic_d;
    end
  end
  
endmodule
