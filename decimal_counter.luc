module decimal_counter (
    input clk,      // clock
    input rst,      // reset
    input inc[4],      // increment the counter
    output ovf[4],     // counter overflowed
    output value[4] // current value
  ) {
 
  .clk(clk), .rst(rst) {
    dff val[4];     // value storage
  }
 
  always {
    value = val.q;           // output the value
 
    ovf = (val.q == 9 && inc == 1) || (val.q >= 8 && inc == 2) || (val.q >= 7 && inc == 3)
           || (val.q >= 6 && inc == 4) || (val.q >= 4 && inc == 6) || (val.q >= 2 && inc == 8); // if max value and incrementing, overflow!
 
    if (inc == 1) {          // should add 1
      if (val.q == 9)        // if max value
        val.d = 0;           // reset to 0
      else                   // otherwise
        val.d = val.q + 1;   // add one
    }
    
    if (inc == 2) {     
      if (val.q == 9)        
        val.d = 1;           
      else if (val.q == 8)
        val.d =  0;
      else                 
        val.d = val.q + 2; 
    }
    
    if (inc == 3) {    
      if (val.q == 9)        
        val.d = 2;           
      else if (val.q == 8)
        val.d = 1;
      else if (val.q == 7)
        val.d = 0;
      else           
        val.d = val.q + 3;  
    }
    
     if (inc == 4) {   
      if (val.q == 9)        
        val.d = 3;          
      else if (val.q == 8)
        val.d = 2;
      else if (val.q == 7)
        val.d = 1;
      else if (val.q == 6)
        val.d = 0;
      else                   
        val.d = val.q + 4;   
    }
    
    if (inc == 6) {         
      if (val.q == 9)        
        val.d = 5;           
      else if (val.q == 8)
        val.d = 4;
      else if (val.q == 7)
        val.d = 3;
      else if (val.q == 6)
        val.d = 2;
      else if (val.q == 5)
        val.d = 1;
      else if (val.q == 4)
        val.d = 0;
      else                   
        val.d = val.q + 6;   
    }
    
    if (inc == 8) {        
      if (val.q == 9)        
        val.d = 7;           
      else if (val.q == 8)
        val.d = 6;
      else if (val.q == 7)
        val.d = 5;
      else if (val.q == 6)
        val.d = 4;
      else if (val.q == 5)
        val.d = 3;
      else if (val.q == 4)
        val.d = 2;
      else if (val.q == 3)
        val.d = 1;
      else if (val.q == 2)
        val.d = 0;
      else                   
        val.d = val.q + 8;   
    }
    
     if (inc == 12) {              
      ovf = 1 + (val.q >= 8);
      if (val.q == 9)        
        val.d = 1;           
      else if (val.q == 8)
        val.d =  0;
      else                   
        val.d = val.q + 2;   
    }
    
    if (inc == 5) { // reset combo count to 0
      ovf = 5;
      val.d = 0;
    }
  }
}