module alu (
    input a[16],
    input b[16],
    input alufn_signal[6],
    output c[16],
    output zvn[3]
) {
  
  // instantiation of alu subcomponents
  adder adderUnit;
  compare compareUnit;
  boolean booleanUnit;
  shifter shifterUnit;
  
  sig z;
  sig v;
  sig n;
  
  always {
    // assigns the inputs of the alu to the inputs of the adder
    adderUnit.alufn_signal = alufn_signal;
    adderUnit.a = a;
    adderUnit.b = b;
    
    // assigns intermediate z v n values to the outputs of the adder
    z = adderUnit.z;
    v = adderUnit.v;
    n = adderUnit.n; 
    
    zvn[0] = z;
    zvn[1] = v;
    zvn[2] = n;
    
    // assigns inputs of the alu to the inputs of compare, boolean and shifter units 
    compareUnit.alufn_signal = alufn_signal;
    compareUnit.z = z;
    compareUnit.v = v;
    compareUnit.n = n;
    
    booleanUnit.alufn_signal = alufn_signal;
    booleanUnit.a = a;
    booleanUnit.b = b;
    
    shifterUnit.alufn_signal = alufn_signal;
    shifterUnit.a = a;
    shifterUnit.b = b[4:0];
    
    // outputs based on alufn_signal[5:4] upon combining the subcomponents
    case(alufn_signal[5:4]) {
      b00: c = adderUnit.c;
      b01: c = booleanUnit.c;
      b10: c = shifterUnit.c;
      b11: c = compareUnit.c;
      default: c = 16b0;
    }
    
    // multiplier signal 
    if (alufn_signal == b000010) {
      c = a * b;
    }
    
  }
}